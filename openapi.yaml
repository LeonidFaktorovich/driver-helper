openapi: "3.0.0"
info:
    title: DriverHelper API
    version: "1.0"
servers:
    - url: http://207.154.204.60:5000/
components:
    schemas:
        point:
            type: object
            properties:
                x:
                    type: number
                    format: double
                y:
                    type: number
                    format: double
            required:
                - x
                - y
        route:
            type: object
            properties:
                start:
                    $ref: '#/components/schemas/point'
                finish:
                    $ref: '#/components/schemas/point'
                owner:
                    description: login of owner of this route
                    type: string
                date_start:
                    type: string
                    format: YYYY-MM-DD
                    example: 2023-02-12
                time_start:
                    type: string
                    format: HH:MM
                    example: 19:10
                approved:
                    type: array
                    items:
                        description: logins of approved friends
                        type: string
                wait_approve:
                    type: array
                    items:
                        description: logins of friends awaiting approval
                        type: string
    securitySchemes:
        UserToken:
            type: apiKey
            in: header
            name: token
        
paths:
    /register:
        post:
            description: create user
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                login:
                                    description: encode login
                                    type: string
                                password:
                                    description: encode hash of password
                                    type: string
                            required:
                                - login
                                - password
            responses:
                '200': 
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token: 
                                        description: encode token
                                        type: string
                '409':
                    description: Invalid registration
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    detail:
                                        description: encode error message
                                        type: string
    /login:
        post:
            description: login into application and getting token
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                login:
                                    description: encode login
                                    type: string
                                password:
                                    description: encode hash of password
                                    type: string
                            required:
                                - login
                                - password
            responses:
                '200': 
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token: 
                                        description: encode token
                                        type: string
                '404':
                    description: Invalid login
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    detail:
                                        description: encode error message
                                        type: string
    /add_friend:
        post:
            description: add friend
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                friend_login:
                                    description: login of friend
                                    type: string
                            required:
                                - friend_login
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                '404':
                    description: login was not found
    /delete_friend:
        post:
            description: delete friend
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                friend_login:
                                    description: login of friend
                                    type: string
                            required:
                                - friend_login
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                '404':
                    description: login was not found
    /approve_friend:
        post:
            description: approve friend
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                friend_login:
                                    description: login of the user who wants to be added to friends
                                    type: string
                            required:
                                - friend_login
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                '404':
                    description: login was not found
    /dismiss_friend:
        post:
            description: dismiss friend
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                friend_login:
                                    description: login of the user who wants to be added to friends
                                    type: string
                            required:
                                - friend_login
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                '404':
                    description: login was not found
    /friends:
        get:
            description: get list of all friends 
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    friends:
                                      description: my friends
                                      type: array
                                      items:
                                          description: friend's login
                                          type: string
    /incoming_requests:
        get:
            description: get list of all incoming friend requests
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    users:
                                      description: my incoming friend requests
                                      type: array
                                      items:
                                          description: user's login
                                          type: string
    /outgoing_requests:
        get:
            description: get list of all outgoing friend requests
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    users:
                                      description: my outgoing friend requests
                                      type: array
                                      items:
                                          description: user's login
                                          type: string
    /map:
        get:
            description: get my routes and my friends' routes
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    routes:
                                        description: my routes and my friends' routes
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/route'
    /add_route:
        post:
            description: add new route
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                route:
                                    $ref: '#/components/schemas/route' 
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
    /delete_route:
        post:
            description: delete route
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                route:
                                    $ref: '#/components/schemas/route' 
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
    /edit_route:
        post:
            description: edit route
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                old_route:
                                    $ref: '#/components/schemas/route'
                                new_route:
                                    $ref: '#/components/schemas/route'
                            required:
                                - old_route
                                - new_route    
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                '404':
                    description: route was not found
    /join_route:
        post:
            description: join the route
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                route:
                                    $ref: '#/components/schemas/route' 
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
    /approve_fellow:
        post:
            description: approve fellow traveler
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                friend_login:
                                    description: friend login
                                    type: string
                                route:
                                    description: route
                                    $ref: '#/components/schemas/route'
                            required:
                                - friend_login
                                - route
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                '404':
                    description: login or route was not found
    /dismiss_fellow:
        post:
            description: dismiss fellow traveler
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                friend_login:
                                    description: friend login
                                    type: string
                                route:
                                    description: route
                                    $ref: '#/components/schemas/route'
                            required:
                                - friend_login
                                - route
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                '404':
                    description: login or route was not found
    /avatar_path:
        get:
            description: path to avatar 
            security:
                - UserToken: [ ]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                              type: object
                              properties:
                                  path:
                                      description: path to avatar
                                      type: string
                                  
